<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping\ClassMetadata;
use AppBundle\Entity\Article; 
use AppBundle\Entity\User;
use AppBundle\Entity\Comment;
use Doctrine\ORM\Tools\Pagination\Paginator;
use triguk\AuthorizationBundle\Repository\SimplePaginatorInterface;
use triguk\AuthorizationBundle\Repository\SimplePaginatorTrait;


/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends \Doctrine\ORM\EntityRepository implements SimplePaginatorInterface
{
    use SimplePaginatorTrait;
    
    protected $manager;
    
    public function __construct(EntityManager $manager, ClassMetadata $classMetadata)
    {
        parent::__construct($manager,$classMetadata);
        $this->manager=$manager;
    }  

    public function getCommentPaginator($page=1,$pageSize=10,Article $article)
    {

        $query = $this->manager
            ->createQueryBuilder('c')
            ->select('c','ua','ue')
            ->from('AppBundle:Comment','c')
            ->join('c.author','ua')
            ->leftJoin('c.editor','ue')
            ->where('c.article = :article')
            ->setParameter('article', $article)
            ->setFirstResult($pageSize * ($page-1))
            ->setMaxResults($pageSize);        
    
        $paginator = new Paginator($query);
        if ($page>1)
        {
            $paginator
                ->getQuery()
                ->setFirstResult($pageSize * ($page-1)) 
                ->setMaxResults($pageSize);
        }   
        return $paginator;
    }    
    
}
